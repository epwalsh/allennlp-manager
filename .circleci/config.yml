defaults: &defaults
  docker:
    - image: circleci/python:3.6
  working_directory: ~/allennlp-manager

version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout

      - &restore_cache
        restore_cache:
          name: Restoring dependencies cache
          keys:
            - deps-v1-{{ checksum "requirements.txt" }}-{{ checksum "requirements.server.txt" }}-{{ checksum "requirements.dev.txt" }}
            - deps-v1-

      - &setup_environment
        run:
          name: Installing dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements.server.txt
            pip install -r requirements.dev.txt
            python setup.py develop

      - &save_cache
        save_cache:
          name: Saving dependencies cache
          key: deps-v1-{{ checksum "requirements.txt" }}-{{ checksum "requirements.server.txt" }}-{{ checksum "requirements.dev.txt" }}
          paths:
            - venv

      - run:
          name: Running code linters
          command: |
            . venv/bin/activate
            make lint

      - run:
          name: Running type checks
          command: |
            . venv/bin/activate
            make typecheck

      - run:
          name: Running unit tests
          command: |
            . venv/bin/activate
            make unit-tests

      - run:
          name: Running integration tests
          command: |
            . venv/bin/activate
            make integration-tests

  test_install_from_github:
    <<: *defaults
    steps:
      - run:
          name: Set up environment
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip

      - run:
          name: Install directly
          command: |
            . venv/bin/activate
            pip install "git+git://github.com/epwalsh/allennlp-manager.git@$CIRCLE_SHA1"

      - run:
          name: Check installation
          command: |
            set -e
            . venv/bin/activate
            python -c 'import mallennlp'
            which mallennlp
            mallennlp --help

  build_server_image:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout

      - run:
          name: Login to Docker Hub
          command: |
            docker login --username="$HUB_USERNAME" --password="$HUB_PASSWORD"

      - run:
          name: Build image
          command: |
            make build

      - run:
          name: Push image
          command: |
            make hub-push
            make hub-push DOCKER_HUB_TAG=$(python -c 'from mallennlp import VERSION; print(VERSION)')

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - test_install_from_github:
          filters:
            branches:
              only: master
      - build_server_image:
          requires:
            - test
            - test_install_from_github
          filters:
            branches:
              only: master
